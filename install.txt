#--------------------------------------------------------------------------------------------------------------------------------------
#													JDK Installation
#--------------------------------------------------------------------------------------------------------------------------------------
# Step 1: Download the JDK
# Change to the directory ~/Download
cd  ~/Download
# command to Download JDK Setup
wget --no-check-certificate --no-cookies --header "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/8u45-b14/jdk-8u45-linux-x64.tar.gz

# Step 2: Unpack the downloaded JDK file into root directory (~/)

tar zxvf jdk-8u45-linux-x64.tar.gz -C ~

# The above instruction unpacks the tar.gz file into ~/jdk1.8.0_45
# Step 3: Setting JAVA_HOME and PATH( This is for running ActiveMQ Broker)

vim /etc/environment
# (vim) Command line text editor opens a file (Edit the file and enter the following instructions)
JAVA_HOME=/root/jdk1.8.0_45
# NOTE: Don't remove the PATH variable, only append  jJAVA_HOME/bin to existing PATH
PATH=$PATH:JAVA_HOME/bin 

# Step 4: Check JAVA_HOME and PATH directory 
echo $JAVA_HOME
echo $PATH

# Step 7: Confirm Java Version in use is the installed version
java -version

# Java version “1.8.0” will be displayed

#--------------------------------------------------------------------------------------------------------------------------------------
#													Pre-Installation for Active
#--------------------------------------------------------------------------------------------------------------------------------------

# ActiveMQ Pre-installation
# ActiveMQ requires that JDK be setup before it can run.
# Login into the server as follows and type the following command to check if Java is Installed and set properly
echo JAVA_HOME
# /root/jdk1.8.0_45 should be displayed on the console
java -version
#  Java version 1.8.0 should be displayed on the console
# If Java is not set properly refer to JDK Setup file

#--------------------------------------------------------------------------------------------------------------------------------------
#													ActiveMQ Installation
#--------------------------------------------------------------------------------------------------------------------------------------

# Installation instruction for ActiveMQ
# Step 1: Change to ~/Download
cd  ~/Download

# Step 2: Download ActiveMQ
wget http://apache.is.co.za/activemq/5.11.1/apache-activemq-5.11.1-bin.tar.gz

#Step 3: Unpack the downloaded ActiveMQ setup file into ~/ by typing following command:
tar zxvf apache-activemq-5.11.1-bin.tar.gz -C ~/

# Add  symbolic link to the init script provided by Active MQ (64 bit linux example):

sudo ln -sf /opt/apache-activemq-5.5.0/bin/linux-x86-64/activemq /etc/init.d/

#--------------------------------------------------------------------------------------------------------------------------------------
#													Post-Installation
#---------------------------------------------------------------------------------------------------------------------------------------

# ActiveMQ comes with default settings for Web Console and TCP connectors. These settings need 
# to be changed to secure ActiveMQ for (Remote) access and enable tcp connections. The instructions below are for changing the 
# default settings and customizing accordingly.

# Configure a broker and tcp variables using vim utility

vim ~/apache-activemq-5.11.1/conf/jetty.xml

# Edit the text file by type i and navigating the text file. Locate the brokerName and change broker name to polygon. 
# Locate Transport connectors <transportConnector name="openwire" uri="tcp://0.0.0.0:61616" enableStatusMonitor="true"/>
# Change uri as uri="45.56.76.161:61616" and exit the terminal by clicking Esc, the :wq press enter
# By Default, my Web Console credentials are admin/admin. For security purpose, these default values should be changed as follows:

vim ~/apache-activemq-5.11.1/conf/jetty-realm.properties
# Edit the properties file as per below.
# Change username and password and leave the roles. Under , admin,admin,admin
Polygon, P@1yg0N,admin

# Remove user,user,user 
# Exit the text editor and save the file (:wq)

# Activate web console for remote access
# wget http://localhost:8161/admin
# nc localhost 8161, nv localhost 8161

openssl s_client -connect 45.56.76.161:8161 -crlf

#ActiveMQ's default port is 61616. Run netstat and search for port 61616.
netstat -an|grep 61616
#and  web console should be available http://localhost:8161.

#--------------------------------------------------------------------------------------------------------------------------------------
#													Starting ActiveMQ
#---------------------------------------------------------------------------------------------------------------------------------------
# If you like you can setup activemq to start on startup:
# update-rc.d ~/apache-activemq-5.11.1/bin/activemq defaults

# Start ActiveMQ Admin 
cd ~/apache-activemq-5.11.1
./bin/activemq-admin

# Run activeMq
./bin/activemq start

# To check if the active mq is up and running
./activemq status 
#to start and stop active mq
./activemq start  
./activemq stop

#--------------------------------------------------------------------------------------------------------------------------------------
#													Uninstallation of ActiveMQ
#---------------------------------------------------------------------------------------------------------------------------------------
# This should be executed only if 
update-rc.d -f activemq remove
rm /etc/init.d/activemq



# Refer to ActiveMQ online Documentation for further usage
# http://activemq.apache.org/

# For On-Install for ActiveMQ, the below link can be referred to:
https://sites.google.com/a/microgolem.com/www/home/infrastructure/linux/ubuntu/activemq-installation



############################################################################
                      MySQL Installation
############################################################################



Installing MySQL generic binaries 

#First download the tar.gz file. Make sure that you have the appropriate version of C libraries (glibc) installed
# for instance, MySQL version 5.6.21 requires glibc 2.5. You can determine what version of glibc your OS 
#is using with the following command:

	ldd --version
This will give you output resembling the following:

	ldd (Debian GLIBC 2.19-13) 2.19

#First, you will need to create the mysql group if it does not already exist.
#You can find out if it exists by the following command:

	cut -d: -f1 /etc/group | grep mysql

#If the mysql group already exists, the above command will print:

	mysql
#If the command does not give this result, you will need to create the mysql group:

	sudo groupadd mysql

#Now that the mysql group has been added, you will need to create a user named mysql.
#First, check to see if it already exists:

	cut -d: -f1 /etc/passwd | grep mysql

#If this command does not return:

	mysql

#Then you will need to create the mysql user, and add it to the mysql group:

	sudo useradd -r -g mysql mysql

#Next we will unpack the MySQL tar archive. Here, will assume the file is named mysql-5.1.73-linux-x86_64-glibc23.tar.gz,
#and that it is located in the directory /downloads.
#First, choose where to install MySQL. Here, 
#we will choose the directory /usr/local, which is a standard location. In our installation, making changes to this directory requires root privileges,
#so we will execute many of the following commands using sudo.
#Now, we will unpack the tar archive into this directory the local directory by the following command
#which will create an installation directory containing all the tarball's contents:

	tar zxvf mysql-5.1.73-linux-x86_64-glibc23.tar.gz –C /usr/local
	
#First, we'll cd to /usr/local:

	cd /usr/local

#Next we will create a symbolic link to this directory called mysql, using the ln command:

	ln -s mysql-5.1.73-linux-x86_64-glibc23 mysql

#Now we will edit the configuration file, create the core databases, start the MySQL server, and set up passwords for the essential MySQL users.

#First, we will cd into our base MySQL directory:

	cd /usr/local/mysql
<<<<<<< HEAD
	chown -R mysql .
	chgrp -R mysql .
	scripts/mysql_install_db --user=mysql
	chown -R root .
	chown -R mysql data
#Step 10.2. Next command is optional
	cp support-files/my-medium.cnf /etc/my.cnf
	bin/mysqld_safe --user=mysql &
#Step 10.3. Next command is optional
	cp support-files/mysql.server /etc/init.d/mysql.server


#Step 11To run MySql

	cd /usr/local/polygon/mysql-5.5.1-m2-linux-x86_64-glibc23/bin
 	./mysql
#When you see the below you now have access to mysql
mysql>

#Step 12. To see all schemas(DBs) type the following
show schemas;
#Step 13. Press enter
#Step 14. create schema
   create schema polygon;
   grant all on polygon.* to 'mysql'@'localhost' identied by 'admin';


#Accessing MySQL through workbench
=======
#We should add /usr/local/mysql to our PATH environment variable by the following command. 

	sudo echo 'PATH=$PATH:/usr/local/mysql/bin' >> /etc/profile

#Now let's make sure that the mysql user and group are the owners of everything we just installed:

	sudo chown -R mysql /usr/local/mysql/.
	sudo chgrp -R mysql /usr/local/mysql/.

#Now we will run the mysql_install_db program to set up the initial MySQL grant tables which define how users are able to access the MySQL databases

	sudo /usr/local/mysql/scripts/mysql_install_db --user=mysql


#When mysql_install_db runs successfully, it will create the server's data directory with mysql as the owner. 
#Under the data directory, it creates directories for the database which holds the grant tables and the test database that you can use to test MySQL.
#It also creates privilege table entries for the root and anonymous MySQL user accounts. These accounts have no password initially.
#These default privileges permit the MySQL root account to do anything, and permit any MySQL user to create or use databases with a name of test or a name starting with test_.

#Now we will start the MySQL server:

	sudo bin/mysqld_safe --user=mysql &

#At this point, anyone can access MySQL as the MySQL root user, because it has no password associated with it
#This is very insecure, obviously, so we should set a password for the MySQL root user. To do this, we will launch the mysql client and issue the appropriate commands. Start the mysql client as the MySQL root user:

	mysql -u root

#After a brief hello message, you will be presented with the mysql> prompt.
#You can now exit the mysql client by issuing the exit command:
	mysql> exit

<<<<<<< HEAD

#After installing mysql go to my.cnf file and edit it to add the bind address by the following command

    vi /etc/mysql/my.cnf

#Add bind-address  

    "bind-address            = 45.56.76.161"

#Restart mysql by the following command

     /etc/init.d/mysql.server restart

#Now verify that the server in fact has port 3306 open by executing the following command

    netstat -ntlup | grep 3306

You should see an output like this:

    tcp        0      0 45.56.76.161:3306       0.0.0.0:*               LISTEN      27972/mysqld

