############################################################### 
           Java JDK Installation Instructions 
##############################################################

# Step 1: Login Into the Server
# Login into the server as follows:
# Open putty, and paste the address 45.56.76.161 in the Host Name( or IP address) textbox and click open.
# Step 2: Provide Login details at terminal  (username and password)
# On successful login, the following are installation instructions!!!

# Step 3: Installation Instructions: Java JDK
# Change to the directory /usr/local
cd  /usr/local
# Download JDK Setup
wget --no-check-certificate --no-cookies --header "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/8u45-b14/jdk-8u45-linux-x64.tar.gz



# Step 4: Unpack the downloaded JDK file into /usr/local/polygon

tar zxvf jdk-8u45-linux-x64.tar.gz -C /usr/local/polygon

# The above instruction unpacks the tar.gz file into /usr/local/polygon/jdk1.8.0_45
# Step 5: Setting JAVA_HOME and PATH for each new session ( This is for running ActiveMQ Broker)

export JAVA_HOME=/usr/local/polygon/jdk1.8.0_45
export PATH=$PATH:/usr/local/polygon/jdk1.8.0_45/bin

# Step 6: Check JAVA_HOME and PATH are set type 
echo $JAVA_HOME
echo $PATH

# Step 7: Confirm Java Version in use is the installed version
java -version

# Java version â€œ1.8.0â€? will be displayed


############################################################### 
          ActiveMQ Installation Instructions 
###############################################################

# Installation instruction for ActiveMQ
# Step 1: Change to /usr/local
cd  /usr/local

# Step 2: Download ActiveMQ
wget http://apache.is.co.za/activemq/5.11.1/apache-activemq-5.11.1-bin.tar.gz

#Step 3: Unpack the downloaded ActiveMQ setup file into /usr/local/polygon by typing following command:
tar zxvf apache-activemq-5.11.1-bin.tar.gz -C /usr/local/polygon

# To Run ActiveMQ. Change to /usr/local/polygon/apache-activemq-5/bin
cd /usr/local/polygon/apache-activemq-5.11.1/bin
./activemq start
#to check if the active mq is up and running
./activemq status 
#to start and stop active mq
./activemq start  and ./activemq stop

# ActiveMQ should be running

Start and Stop(process need to be written)



        ############################################################################
                     		 MySQL Installation
	############################################################################



 #------------------------------------------#
  	 MySQL Pre-Installation setup
 #------------------------------------------#

# Verify that the version(s) of MySQL server that you intalling are supported by your server
# Determine what version of glibc your OS with the following command:

	ldd --version
# Download   mysql-5.1.73-linux-x86_64-glibc23.tar.gz on mysql http://www.mysql.com/ site to your server

	wget http://dev.mysql.com/get/Downloads/MySQL-5.1/mysql-5.1.73-linux-x86_64-glibc23.tar.gz



 #------------------------------------------#
  	 MySQL Post-Installation setup 
 #------------------------------------------#



#First, you will need to create the mysql group if it does not already exist.
#You can find out if it exists by the following command:

	cut -d: -f1 /etc/group | grep mysql

#If the mysql group already exists, the above command will print:

	mysql
#If the command does not give this result, you will need to create the mysql group:

	sudo groupadd mysql

#Now that the mysql group has been added, you will need to create a user named mysql.
#First, check to see if it already exists:

	cut -d: -f1 /etc/passwd | grep mysql

#If this command does not return:

	mysql

#Then you will need to create the mysql user, and add it to the mysql group:

	sudo useradd -r -g mysql mysql



 #-------------------------------------#
	 MySQL Installation 
 #-------------------------------------#


#We will now unpack the MySQL tar archive. Here, will assume the file is named mysql-5.1.73-linux-x86_64-glibc23.tar.gz,
#and that it is located in the directory /downloads.
#First, choose where to install MySQL. Here, 
#we will choose the directory /root, which is a standard location. In our installation, making changes to this directory requires root privileges,
#so we will execute many of the following commands using sudo.
#Now, we will unpack the tar archive into this directory the root directory by the following command
#which will create an installation directory containing all the tarball's contents:

	tar zxvf mysql-5.1.73-linux-x86_64-glibc23.tar.gz -C -/
	

#Next we will create a symbolic link to this directory called mysql, using the ln command:

	ln -s mysql-5.1.73-linux-x86_64-glibc23 mysql

#Now we will edit the configuration file, create the core databases, start the MySQL server, and set up passwords for the essential MySQL users.

#First, we will cd into our base MySQL directory:

	cd mysql

#We should add /mysql to our PATH environment variable
#Add the line PATH=$PATH:/mysql/bin to the .profile file in your home directory

	echo 'PATH=$PATH:/usr/local/mysql/bin' >> ~/.profile

#Now let's make sure that the mysql user and group are the owners of everything we just installed:

	sudo chown -R /mysql/.

	sudo chgrp -R mysql /mysql/.
	

#Now we will run the mysql_install_db program to set up the initial MySQL
#Grant tables which define how users are able to access the MySQL databases. 
#This process is performed automatically in other installation procedures,
#such as using a package manager. Here we will do it manually :

sudo /usr/local/mysql/scripts/mysql_install_db --user=mysql

#When mysql_install_db runs successfully, it will create the server's data directory
#with mysql as the owner
#Now we will start the MySQL server:

	sudo bin/mysqld_safe --user=mysql &

#At this point, anyone can access MySQL as the MySQL root user,
#because it has no password associated with it. This is very insecure,
#obviously, so we should set a password for the MySQL root user.
#To do this, we will launch the mysql client and issue the appropriate commands.
#Start the mysql client as the MySQL root user:

mysql -u root


#The MySQL database comes with some anonymous users with blank passwords.
#As a result, anyone can connect to the database To check whether this is the case, do the following:

mysql> select * from mysql.user where user="";

#To remove the account, execute the following command:

mysql> DROP USER "";


At this prompt, enter the following commands, replacing newrootpwd with the password you'd
like to set for MySQL root, and thishostname with the hostname of your system:

	mysql> SET PASSWORD FOR 'root'@'localhost' = PASSWORD('newrootpwd');
	mysql> SET PASSWORD FOR 'root'@'127.0.0.1' = PASSWORD('newrootpwd');
	mysql> SET PASSWORD FOR 'root'@'::1' = PASSWORD('newrootpwd');
	mysql> SET PASSWORD FOR 'root'@'thishostname' = PASSWORD('newrootpwd');

#To see all schemas(DBs) type the following
	show schemas;

# create schema
  	create schema polygon;
   	grant all on polygon.* to 'root'@'localhost' identied by 'newrootpwd';


#Now you can exit mysql

mysql> exit


#To check that the MySQL server is running, we can use the mysqladmin program using this command, for example:

	/mysql/bin/mysqladmin version -u root -p


#After installing mysql go to my.cnf file and edit it to add the bind address by the following command

    vi /etc/mysql/my.cnf

#Add bind-address  

    "bind-address            = 45.56.76.161"

#Restart mysql by the following command

     /etc/init.d/mysql.server restart

#Now verify that the server in fact has port 3306 open by executing the following command

    netstat -ntlup | grep 3306

#You should see an output like this:

    tcp        0      0 45.56.76.161:3306       0.0.0.0:*               LISTEN      27972/mysqld




 #-----------------------------------------#
 	Unistalling MySQL 
 #------------------------------------------#

#To uninstall the activemq service, you may do the following:
	sudo update-rc.d -f mysql remove
	sudo rm /etc/init.d/mysql.server